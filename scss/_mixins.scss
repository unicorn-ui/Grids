@import 'options';

//////////////////////////////////////////////////////////
// GENERAL HELPERS  //////////////////////////////////////
//////////////////////////////////////////////////////////


//CREATE A COMMA SEPERATED LIST CLASSES FOR LENGTH OF GRID
//RETURNS: .c1, .c2, .c3, .c4, .c5, etc...
@function create-list-names($length, $class-name) {
    $list: '';

    @for $i from 1 through $length {

        //For the first item don't include the comma or concat
        @if $i == 1 {
            $list: #{$class-name}$i;
        }
        @else {
            $list: #{$list}, #{$class-name}$i;
        }
    }

    @return $list;
}



//////////////////////////////////////////////////////////
// FLUID CALCULATIONS  ///////////////////////////////////
//////////////////////////////////////////////////////////

//FLUID COLUMN CALCULATOR
@function calculate-fluid-column($i, $fluid-unit) {
    $multiplier: $i - 1;
    $column-size: $unicorn-grid-fluid-gutter;

    @return ($column-size + (($column-size + 2) * $multiplier)) * $fluid-unit;
}

//FLUID COLUMN SPACER
@function calculate-fluid-spacer($i, $fluid-unit) {
    $multiplier: $i - 1;
    $column-size: $unicorn-grid-fluid-gutter;

    @return ($column-size + (($column-size + 2) * $multiplier)) * $fluid-unit + ($fluid-unit * 3);
}



//////////////////////////////////////////////////////////
// FIXED CALCULATIONS  ///////////////////////////////////
//////////////////////////////////////////////////////////

//FIXED COLUMN CALCULATOR
@function calculate-fixed-column($i, $column-width) {
    $num_of_margins: ($i - 1) * 2;

    //MULTI WIDTH OF COLUMNS BY NUMBER OF MARGINS SWALLOWED BY COLUMN
    @return ($column-width *  $i) + ($unicorn-grid-fixed-margin * $num_of_margins);
}

//FIXED COLUMN SPACER
@function calculate-fixed-spacer($i, $column-width) {
    $num_of_margins: $i * 2;

    //MULTI WIDTH OF COLUMNS BY NUMBER OF MARGINS SWALLOWED BY COLUMN
    @return ($column-width *  $i) + ($unicorn-grid-fixed-margin * $num_of_margins) + $unicorn-grid-fixed-margin;
}


//////////////////////////////////////////////////////////
// BASE STYLES ///////////////////////////////////////////
//////////////////////////////////////////////////////////
@mixin full-list-boiler ($full-list) {
    #{$full-list} {
        display: inline;
        float: left;
        &.grid-right {
            float: right;
        }
        &.nb {
          margin-left: 0;
        }
        &.na {
          margin-right: 0;
        }
    }
}

%grid-general {
    margin: 0 auto;
    $full-list: create-list-names($unicorn-grid-num-columns, $unicorn-grid-column-namespace);
    @include full-list-boiler ($full-list);
}

//////////////////////////////////////////////////////////
// PHONE/TABLET //////////////////////////////////////////
//////////////////////////////////////////////////////////
// Note that these can't be placeholders since we're using
// them from within the media query (that's why using mixins)
@mixin grid-phone {
    margin: 0 auto;
    $full-list: create-list-names($unicorn-grid-num-columns, $unicorn-grid-small-column-namespace);
    @include full-list-boiler ($full-list);
}

@mixin grid-tablet {
    margin: 0 auto;
    $full-list: create-list-names($unicorn-grid-num-columns, $unicorn-grid-tablet-column-namespace);
    @include full-list-boiler ($full-list);
}


//////////////////////////////////////////////////////////
// GRID SPECIFIC STYLES //////////////////////////////////
//////////////////////////////////////////////////////////
@mixin fluid-grid-specific ($columnNamespace, $beforeNamespace: null, $afterNamespace: null) {

    //CREATES A LIST (.c1, .c2, .c3)
    $full-list: create-list-names($unicorn-grid-num-columns, $columnNamespace);

    //CALCULATE FLUID VARIABLES
    $num-margins: $unicorn-grid-num-columns * 2;
    $num-fluid-units: $num-margins + ($unicorn-grid-num-columns * $unicorn-grid-fluid-gutter);
    $fluid-unit: (100% / $num-fluid-units);

    #{$full-list} {
      margin-right: $fluid-unit;
      margin-left: $fluid-unit;
    }

    //LOOP THROUGH AND CREATE COLUMNS
    @for $i from 1 through $unicorn-grid-num-columns {
        #{$columnNamespace}#{$i} {
            width: calculate-fluid-column($i, $fluid-unit);

            &.nb,
            &.na {
                width: calculate-fluid-column($i, $fluid-unit) + $fluid-unit;
            }

            &.na.nb {
                width: calculate-fluid-column($i, $fluid-unit) + ($fluid-unit * 2);
            }
        }

        @if ($beforeNamespace) {
            #{$beforeNamespace}#{$i} {
                margin-left: calculate-fluid-spacer($i, $fluid-unit);
            }
        }

        @if ($afterNamespace) {
            #{$afterNamespace}#{$i} {
                margin-right: calculate-fluid-spacer($i, $fluid-unit);
            }
        }
    }
}

//////////////////////////////////////////////////////////
// CLEARING //////////////////////////////////////////////
//////////////////////////////////////////////////////////
@mixin clearfix {
    *zoom: 1;

    &:after, &:before {
      content: '.';
      clear: both;
      display: block;
      overflow: hidden;
      visibility: hidden;
      font-size: 0;
      line-height: 0;
      width: 0;
      height: 0;
    }
}
